language: python
script: pytest
os: linux
before_install:
- uname -a
- df -h
- ulimit -a
- source devtools/travis-ci/before_install.sh
- python -V
install:
- python devtools/scripts/create_conda_env.py -n=test -p=$PYTHON_VER devtools/conda-envs/test_env.yaml
- conda activate test
- pip install -e .
- conda list
- pip freeze
notifications:
  email: false
stages:
- lint
- test
- deploy
jobs:
  fast_finish: true
  include:
  - stage: lint
    name: Check formatting of code for PEP-8
    os: linux
    language: generic
    env: PYTHON_VER=3.7
    script:
    - flake8 supercell_step tests
    - yapf --diff --recursive  supercell_step tests
  - stage: test
    name: Tests on MacOS Python 3.6
    script:
    - pytest -v tests/
    os: osx
    language: generic
    env: PYTHON_VER=3.6
  - stage: test
    name: Tests on MacOS Python 3.7
    script:
    - pytest -v tests/
    os: osx
    language: generic
    env: PYTHON_VER=3.7
  - stage: test
    name: Tests on Linux Python 3.6
    script:
    - pytest -v tests/
    os: linux
    language: generic
    env: PYTHON_VER=3.6
  - stage: test
    name: Tests and coverage on Linux Python 3.7
    script:
    - pytest -v --cov=supercell_step tests/
    after_success:
    - codecov
    os: linux
    language: generic
    env: PYTHON_VER=3.7
  - stage: deploy
    name: Deploy to PyPi
    if: tag IS present
    os: linux
    dist: xenial
    python: 3.7
    script: skip
    deploy:
      provider: pypi
      distributions: sdist bdist_wheel
      skip_existing: true
      on:
        condition: "$TRAVIS_OS_NAME = linux"
        repo: molssi-seamm/supercell_step
        tags: true
      username: seamm
      password:
        secure: CkuJsSVvHJ5iEwR+AFbafMX48v9pyyol9a84tMG4gWHE9HSvo5T0Cxc+ZaaUV+3G7rOX3uWUHlbYcfT8VczzJ+AUGtlBawAH2BZT0ULMdFNsr7IgAip1XX5aLYbzDj5HZoa3GnQc6tKIqa3RrBLw6cTRcNDrTIN0H1zOQmrECVSjNM3R/7mD2zrySQsEP8MokraC11lZzWJb0dHlh2Z8cKRPorEzJh95gdVwQKapeHBqSuBweIN+Nt0hh7bU+fHYZQDnonsBLgDmrfFnR1WmzdaqBO0g3kRuwRm/nHi0Z6kTECEeAYVOgQhLJLOJJYLgSPCskxeOQo8lNwKNzbTFDfFYiZ0apMGgFlXagoJLBLpaaiUPx6y8HiLbn3T0cWwCP/tbvJ3KU7oWDNLsU8+J4o/YDE5ZKENiHy9Ya8KhCZr7NFNWdq5yEltBIOB5rOCOLwXzBM44hXxovu0lQd7v5LMNZ8olJQss3CHbjoUAkrudnFCqlz3HvRATtbpCft645X5VEqsRz0qDviBze0ovQd0W0kDfsQX+vXDQb/GBU47Hr55kKsb1kptcBtZaKMNOF7/AHO6KuCWHD59Kw4Bj1JTbjne+WBeOP5dC0ehszv8Hfm6k9xjqKfR8AvkT9FLbtPoNk1xWnSNezs69Py2b5Js5Debu7r1n046Yr7pxZIg=
